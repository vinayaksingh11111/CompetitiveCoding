{"title":"A. Game of Life","contestId":"1523","problemIndex":"A","timeLimit":"1 second","memLimit":"256 megabytes","inputFormat":"standard input","outputFormat":"standard output","problemHtml":"<center> <img class=\"tex-graphics\" height=\"378px\" src=\"https://espresso.codeforces.com/9cbb0971d1fb7ede892276cac83500a3c7afe02a.png\" style=\"max-width: 100.0%;max-height: 100.0%;\" width=\"567px\"> </center><p>William really likes the cellular automaton called &quot;Game of Life&quot; so he decided to make his own version. For simplicity, William decided to define his cellular automaton on an array containing $$$n$$$ cells, with each cell either being alive or dead.</p><p>Evolution of the array in William&apos;s cellular automaton occurs iteratively in the following way:</p><ul> <li> If the element is dead and it has <span class=\"tex-font-style-bf\">exactly</span> $$$1$$$ alive neighbor <span class=\"tex-font-style-bf\">in the current state of the array</span>, then on the next iteration it will become alive. For an element at index $$$i$$$ the neighbors would be elements with indices $$$i - 1$$$ and $$$i + 1$$$. If there is no element at that index, it is considered to be a dead neighbor. </li><li> William is a humane person so all alive elements stay alive. </li></ul><p>Check the note section for examples of the evolution.</p><p>You are given some initial state of all elements and you need to help William find the state of the array after $$$m$$$ iterations of evolution.</p>","inSpecsHtml":"<div class=\"section-title\">Input</div><p>Each test contains multiple test cases. The first line contains the number of test cases $$$t$$$ ($$$1 \\le t \\le 10^3$$$). Description of the test cases follows.</p><p>The first line of each test case contains two integers $$$n$$$ and $$$m$$$ ($$$2 \\le n \\le 10^3, 1 \\le m \\le 10^9$$$), which are the total number of cells in the array and the number of iterations.</p><p>The second line of each test case contains a string of length $$$n$$$ made up of characters &quot;<span class=\"tex-font-style-tt\">0</span>&quot; and &quot;<span class=\"tex-font-style-tt\">1</span>&quot; and defines the initial state of the array. &quot;<span class=\"tex-font-style-tt\">1</span>&quot; means a cell is alive and &quot;<span class=\"tex-font-style-tt\">0</span>&quot; means it is dead.</p><p>It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$10^4$$$.</p>","outSpecsHtml":"<div class=\"section-title\">Output</div><p>In each test case output a string of length $$$n$$$, made up of characters &quot;<span class=\"tex-font-style-tt\">0</span>&quot; and &quot;<span class=\"tex-font-style-tt\">1</span>&quot; &#xA0;&#x2014; the state of the array after $$$m$$$ iterations of evolution.</p>","noteHtml":"<div class=\"section-title\">Note</div><p>Sequence of iterations of evolution for the first test case </p><ul> <li> <span class=\"tex-font-style-tt\">01000000001</span> &#xA0;&#x2014; initial state </li><li> <span class=\"tex-font-style-tt\">11100000011</span> &#xA0;&#x2014; first iteration of evolution </li><li> <span class=\"tex-font-style-tt\">11110000111</span> &#xA0;&#x2014; second iteration of evolution </li><li> <span class=\"tex-font-style-tt\">11111001111</span> &#xA0;&#x2014; third iteration of evolution </li></ul><p>Sequence of iterations of evolution for the second test case </p><ul> <li> <span class=\"tex-font-style-tt\">0110100101</span> &#xA0;&#x2014; initial state </li><li> <span class=\"tex-font-style-tt\">1110111101</span> &#xA0;&#x2014; first iteration of evolution </li><li> <span class=\"tex-font-style-tt\">1110111101</span> &#xA0;&#x2014; second iteration of evolution </li></ul>","sampleTestcases":[{"id":1622386441260,"input":"4\n11 3\n01000000001\n10 2\n0110100101\n5 2\n10101\n3 100\n000\n","output":"11111001111\n1110111101\n10101\n000\n","result":{"id":1622386441260,"stdout":"11111001111\r\n1110111101\r\n10101\r\n000\r\n","stderr":"","exitcode":0,"signal":null,"time":81,"timeout":false}},{"id":1622387277885,"input":"1\n2 2\n11","output":"11","result":{"id":1622387277885,"stdout":"11\r\n","stderr":"","exitcode":0,"signal":null,"time":79,"timeout":false}}],"submitUrl":"https://codeforces.com/contest/1523/submit","language":"c++","langId":"54"}