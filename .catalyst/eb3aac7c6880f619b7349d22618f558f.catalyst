{"title":"D. Armchairs","contestId":"1525","problemIndex":"D","timeLimit":"2 seconds","memLimit":"512 megabytes","inputFormat":"standard input","outputFormat":"standard output","problemHtml":"<p>There are $$$n$$$ armchairs, numbered from $$$1$$$ to $$$n$$$ from left to right. Some armchairs are occupied by people (at most one person per armchair), others are not. The number of occupied armchairs is not greater than $$$\\frac{n}{2}$$$.</p><p>For some reason, you would like to tell people to move from their armchairs to some other ones. If the $$$i$$$-th armchair is occupied by someone and the $$$j$$$-th armchair is not, you can tell the person sitting in the $$$i$$$-th armchair to move to the $$$j$$$-th armchair. The time it takes a person to move from the $$$i$$$-th armchair to the $$$j$$$-th one is $$$|i - j|$$$ minutes. You may perform this operation any number of times, but these operations must be done sequentially, i.&#x2009;e. you cannot tell a person to move until the person you asked to move in the last operation has finished moving to their destination armchair.</p><p>You want to achieve the following situation: every seat that was initially occupied must be free. What is the minimum time you need to do it?</p>","inSpecsHtml":"<div class=\"section-title\">Input</div><p>The first line contains one integer $$$n$$$ ($$$2 \\le n \\le 5000$$$) &#x2014; the number of armchairs.</p><p>The second line contains $$$n$$$ integers $$$a_1, a_2, \\dots, a_n$$$ ($$$0 \\le a_i \\le 1$$$). $$$a_i = 1$$$ means that the $$$i$$$-th armchair is initially occupied, $$$a_i = 0$$$ means that it is initially free. The number of occupied armchairs is at most $$$\\frac{n}{2}$$$.</p>","outSpecsHtml":"<div class=\"section-title\">Output</div><p>Print one integer &#x2014; the minimum number of minutes you have to spend to achieve the following situation: every seat that was initially occupied must be free.</p>","noteHtml":"<div class=\"section-title\">Note</div><p>In the first test, you can perform the following sequence:</p><ol> <li> ask a person to move from armchair $$$1$$$ to armchair $$$2$$$, it takes $$$1$$$ minute; </li><li> ask a person to move from armchair $$$7$$$ to armchair $$$6$$$, it takes $$$1$$$ minute; </li><li> ask a person to move from armchair $$$4$$$ to armchair $$$5$$$, it takes $$$1$$$ minute. </li></ol><p>In the second test, you can perform the following sequence:</p><ol> <li> ask a person to move from armchair $$$1$$$ to armchair $$$4$$$, it takes $$$3$$$ minutes; </li><li> ask a person to move from armchair $$$2$$$ to armchair $$$6$$$, it takes $$$4$$$ minutes; </li><li> ask a person to move from armchair $$$4$$$ to armchair $$$5$$$, it takes $$$1$$$ minute; </li><li> ask a person to move from armchair $$$3$$$ to armchair $$$4$$$, it takes $$$1$$$ minute. </li></ol><p>In the third test, no seat is occupied so your goal is achieved instantly.</p>","sampleTestcases":[{"id":1621158719313,"input":"7\n1 0 0 1 0 0 1","output":"3\n","result":{"id":1621158719313,"stdout":"3\r\n","stderr":"","exitcode":0,"signal":null,"time":51,"timeout":false}},{"id":1621158719314,"input":"6\n1 1 1 0 0 0\n","output":"9\n","result":{"id":1621158719314,"stdout":"9\r\n","stderr":"","exitcode":0,"signal":null,"time":49,"timeout":false}},{"id":1621158719315,"input":"5\n0 0 0 0 0\n","output":"0\n","result":{"id":1621158719315,"stdout":"0\r\n","stderr":"","exitcode":0,"signal":null,"time":46,"timeout":false}}],"submitUrl":"https://codeforces.com/contest/1525/submit","language":"c++","langId":"54"}