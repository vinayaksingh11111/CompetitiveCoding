{"title":"C. Nastia and a Hidden Permutation","contestId":"1521","problemIndex":"C","timeLimit":"3 seconds","memLimit":"256 megabytes","inputFormat":"standard input","outputFormat":"standard output","problemHtml":"<p><span class=\"tex-font-style-bf\">This is an interactive problem!</span></p><p>Nastia has a hidden permutation $$$p$$$ of length $$$n$$$ consisting of integers from $$$1$$$ to $$$n$$$. You, for some reason, want to figure out the permutation. To do that, you can give her an integer $$$t$$$ ($$$1 \\le t \\le 2$$$), two <span class=\"tex-font-style-bf\">different</span> indices $$$i$$$ and $$$j$$$ ($$$1 \\le i, j \\le n$$$, $$$i \\neq j$$$), and an integer $$$x$$$ ($$$1 \\le x \\le n - 1$$$). </p><p>Depending on $$$t$$$, she will answer: </p><ul> <li> $$$t = 1$$$: $$$\\max{(\\min{(x, p_i)}, \\min{(x + 1, p_j)})}$$$; </li><li> $$$t = 2$$$: $$$\\min{(\\max{(x, p_i)}, \\max{(x + 1, p_j)})}$$$. </li></ul><p>You can ask Nastia <span class=\"tex-font-style-bf\">at most</span> $$$\\lfloor \\frac {3 \\cdot n} { 2} \\rfloor + 30$$$ times. It is guaranteed that she will <span class=\"tex-font-style-bf\">not</span> change her permutation depending on your queries. Can you guess the permutation?</p>","inSpecsHtml":"<div class=\"section-title\">Input</div><p>The input consists of several test cases. In the beginning, you receive the integer $$$T$$$ ($$$1 \\le T \\le 10\\,000$$$)&#xA0;&#x2014; the number of test cases.</p><p>At the beginning of each test case, you receive an integer $$$n$$$ ($$$3 \\le n \\le 10^4$$$)&#xA0;&#x2014; the length of the permutation $$$p$$$.</p><p>It&apos;s guaranteed that the permutation is fixed beforehand and that the sum of $$$n$$$ in one test doesn&apos;t exceed $$$2 \\cdot 10^4$$$.</p>","outSpecsHtml":null,"noteHtml":"<div class=\"section-title\">Note</div><p>Consider the first test case.</p><p>The hidden permutation is $$$[3, 1, 4, 2]$$$.</p><p>We print: &quot;<span class=\"tex-font-style-tt\">?</span> $$$2$$$ $$$4$$$ $$$1$$$ $$$3$$$&quot; and get back $$$\\min{(\\max{(3, p_4}), \\max{(4, p_1)})} = 3$$$.</p><p>We print: &quot;<span class=\"tex-font-style-tt\">?</span> $$$1$$$ $$$2$$$ $$$4$$$ $$$2$$$&quot; and get back $$$\\max{(\\min{(2, p_2)}, \\min{(3, p_4)})} = 2$$$.</p><p>Consider the second test case.</p><p>The hidden permutation is $$$[2, 5, 3, 4, 1]$$$.</p><p>We print: &quot;<span class=\"tex-font-style-tt\">?</span> $$$2$$$ $$$3$$$ $$$4$$$ $$$2$$$&quot; and get back $$$\\min{(\\max{(2, p_3}), \\max{(3, p_4)})} = 3$$$.</p>","sampleTestcases":[{"id":1620401014202,"input":"2\n4\n\n3\n\n2\n\n5\n\n3","output":"? 2 4 1 3\n\n? 1 2 4 2\n\n! 3 1 4 2\n\n? 2 3 4 2\n\n! 2 5 3 4 1\n"}],"submitUrl":"https://codeforces.com/contest/1521/submit","language":"c++"}